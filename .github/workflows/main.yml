name: SportHub workflow

on: push

jobs:
  backend_tests:
    name: Test backend code with flake8
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    - name: Set up python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install flake8==6.0.0 flake8-isort==6.0.0 flake8-broken-line==1.0.0 pep8-naming==0.13.3
    - name: Test code with flake8
      run: python -m flake8 backend/

  build_backend_and_push_to_docker_hub:
    if: ${{ github.ref_name == 'main' }}
    name: Push backend docker image to DockerHub
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest

  deploy:
    name: Deploy project on remote server
    runs-on: ubuntu-latest
    needs: 
      - build_backend_and_push_to_docker_hub
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd sport_search
          sudo docker compose down
          sudo docker compose pull
          sudo docker compose up -d
          sudo docker compose exec backend python manage.py makemigrations
          sudo docker compose exec backend python manage.py migrate
          sudo docker compose exec backend python manage.py collectstatic --no-input
          sudo docker compose exec backend python manage.py create_su

  send_message:
    runs-on: ubuntu-latest
    name: Send message to Telegram
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Деплой backend проекта sport hub успешно выполнен.
